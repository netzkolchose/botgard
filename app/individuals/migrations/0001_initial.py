# Generated by Django 3.2 on 2021-04-22 13:47

import config_tables.admin
from django.db import migrations, models
import django.db.models.deletion
import individuals.numbers
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('species', '0001_initial'),
        ('botman', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_outplantings', models.IntegerField(default=0, editable=False, verbose_name='# outplantings')),
                ('num_individuals', models.IntegerField(default=0, editable=False, verbose_name='# individuals')),
                ('num_species', models.IntegerField(default=0, editable=False, verbose_name='# species')),
                ('num_genera', models.IntegerField(default=0, editable=False, verbose_name='# genera')),
                ('num_outplantings_alive', models.IntegerField(default=0, editable=False, verbose_name='# outplantings alive')),
                ('num_individuals_alive', models.IntegerField(default=0, editable=False, verbose_name='# individuals alive')),
                ('num_species_alive', models.IntegerField(default=0, editable=False, verbose_name='# species alive')),
                ('num_genera_alive', models.IntegerField(default=0, editable=False, verbose_name='# genera alive')),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('full_code', models.CharField(default='', editable=False, max_length=30)),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
                'ordering': ['code'],
            },
            bases=(models.Model, config_tables.admin.Configurable),
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accession_number', models.IntegerField(db_index=True, default=individuals.numbers.get_new_accession_number, null=True, unique=True, verbose_name='accession #')),
                ('accession_extension', models.CharField(blank=True, choices=[('00', '00 (Altbestand)'), ('10', '10 (Wildsamen mit Sammeldaten)'), ('20', '20 (Wildpflanze mit Sammeldaten)'), ('40', '40 (Kulturpflanze/Samen mit Sammeldaten)'), ('50', '50 (Wildsamen/Wildpflanzen ohne Sammeldaten)'), ('70', '70 (Kultursamen)'), ('80', '80 (Kulturpflanze)'), ('90', '90 (Kulturpflanze/Samen wechselnder Herk√ºnfte)'), ('W', 'W (Wildsamen)')], max_length=2, null=True, verbose_name='code of origin')),
                ('id_name_generated', models.CharField(default='', editable=False, max_length=100, verbose_name='name')),
                ('species_checked_by', models.CharField(blank=True, max_length=100, verbose_name='plant categorized by')),
                ('came_as_species', models.CharField(blank=True, max_length=100, verbose_name='received as species')),
                ('ipen_country', models.CharField(choices=[('xx', 'xx UNKNOWN'), ('ad', 'AD (Andorra, Principality of)'), ('ae', 'AE (United Arab Emirates)'), ('af', 'AF (Afghanistan, Islamic State of)'), ('ag', 'AG (Antigua and Barbuda)'), ('ai', 'AI (Anguilla)'), ('al', 'AL (Albania)'), ('am', 'AM (Armenia)'), ('an', 'AN (Netherlands Antilles)'), ('ao', 'AO (Angola)'), ('aq', 'AQ (Antarctica)'), ('ar', 'AR (Argentina)'), ('as', 'AS (American Samoa)'), ('at', 'AT (Austria)'), ('au', 'AU (Australia)'), ('aw', 'AW (Aruba)'), ('az', 'AZ (Azerbaidjan)'), ('ba', 'BA (Bosnia-Herzegovina)'), ('bb', 'BB (Barbados)'), ('bd', 'BD (Bangladesh)'), ('be', 'BE (Belgium)'), ('bf', 'BF (Burkina Faso)'), ('bg', 'BG (Bulgaria)'), ('bh', 'BH (Bahrain)'), ('bi', 'BI (Burundi)'), ('bj', 'BJ (Benin)'), ('bm', 'BM (Bermuda)'), ('bn', 'BN (Brunei Darussalam)'), ('bo', 'BO (Bolivia)'), ('br', 'BR (Brazil)'), ('bs', 'BS (Bahamas)'), ('bt', 'BT (Bhutan)'), ('bv', 'BV (Bouvet Island)'), ('bw', 'BW (Botswana)'), ('by', 'BY (Belarus)'), ('bz', 'BZ (Belize)'), ('ca', 'CA (Canada)'), ('cc', 'CC (Cocos Islands)'), ('cf', 'CF (Central African Republic)'), ('cd', 'CD (Congo, The Democratic Republic of the)'), ('cg', 'CG (Congo)'), ('ch', 'CH (Switzerland)'), ('ci', "CI (Ivory Coast/Cote D'Ivoire)"), ('ck', 'CK (Cook Islands)'), ('cl', 'CL (Chile)'), ('cm', 'CM (Cameroon)'), ('cn', 'CN (China)'), ('co', 'CO (Colombia)'), ('cr', 'CR (Costa Rica)'), ('cs', 'CS (former Czechoslovakia)'), ('cu', 'CU (Cuba)'), ('cv', 'CV (Cape Verde)'), ('cx', 'CX (Christmas Island)'), ('cy', 'CY (Cyprus)'), ('cz', 'CZ (Czech Republic)'), ('de', 'DE (Germany)'), ('dj', 'DJ (Djibouti)'), ('dk', 'DK (Denmark)'), ('dm', 'DM (Dominica)'), ('do', 'DO (Dominican Republic)'), ('dz', 'DZ (Algeria)'), ('ec', 'EC (Ecuador)'), ('ee', 'EE (Estonia)'), ('eg', 'EG (Egypt)'), ('eh', 'EH (Western Sahara)'), ('er', 'ER (Eritrea)'), ('es', 'ES (Spain)'), ('et', 'ET (Ethiopia)'), ('fi', 'FI (Finland)'), ('fj', 'FJ (Fiji)'), ('fk', 'FK (Falkland Islands)'), ('fm', 'FM (Micronesia)'), ('fo', 'FO (Faroe Islands)'), ('fr', 'FR (France)'), ('fx', 'FX (France, European Territory)'), ('ga', 'GA (Gabon)'), ('gb', 'GB (Great Britain)'), ('gd', 'GD (Grenada)'), ('ge', 'GE (Georgia)'), ('gf', 'GF (French Guyana)'), ('gh', 'GH (Ghana)'), ('gi', 'GI (Gibraltar)'), ('gl', 'GL (Greenland)'), ('gm', 'GM (Gambia)'), ('gn', 'GN (Guinea)'), ('gp', 'GP (French Guadeloupe)'), ('gq', 'GP (Equatorial Guinea)'), ('gr', 'GR (Greece)'), ('gs', 'GS (S. Georgia & S. Sandwich Isls.)'), ('gt', 'GT (Guatemala)'), ('gu', 'GU (Guam (USA))'), ('gw', 'GW (Guinea Bissau)'), ('gy', 'GY (Guyana)'), ('hk', 'HK (Hong Kong)'), ('hm', 'HM (Heard and McDonald Islands)'), ('hn', 'HN (Honduras)'), ('hr', 'HR (Croatia)'), ('ht', 'HT (Haiti)'), ('hu', 'HU (Hungary)'), ('id', 'ID (Indonesia)'), ('ie', 'IE (Ireland)'), ('il', 'IL (Israel)'), ('in', 'IN (India)'), ('io', 'IO (British Indian Ocean Territory)'), ('iq', 'IQ (Iraq)'), ('ir', 'IR (Iran)'), ('is', 'IS (Iceland)'), ('it', 'IT (Italy)'), ('jm', 'JM (Jamaica)'), ('jo', 'JO (Jordan)'), ('jp', 'JP (Japan)'), ('ke', 'KE (Kenya)'), ('kg', 'KG (Kyrgyz Republic, Kyrgyzstan)'), ('kh', 'KH (Cambodia, Kingdom of)'), ('ki', 'KI (Kiribati)'), ('km', 'KM (Comoros)'), ('kn', 'KN (Saint Kitts & Nevis Anguilla)'), ('kp', 'KP (North Korea)'), ('kr', 'KR (South Korea)'), ('kw', 'KW (Kuwait)'), ('ky', 'KY (Cayman Islands)'), ('kz', 'KZ (Kazakhstan)'), ('la', 'LA (Laos)'), ('lb', 'LB (Lebanon)'), ('lc', 'LC (Saint Lucia)'), ('li', 'LI (Liechtenstein)'), ('lk', 'LK (Sri Lanka)'), ('lr', 'LR (Liberia)'), ('ls', 'LS (Lesotho)'), ('lt', 'LT (Lithuania)'), ('lu', 'LU (Luxembourg)'), ('lv', 'LV (Latvia)'), ('ly', 'LY (Libya)'), ('ma', 'MA (Morocco)'), ('mc', 'MC (Monaco)'), ('md', 'MD (Moldavia)'), ('me', 'ME (Montenegro)'), ('mg', 'MG (Madagascar)'), ('mh', 'MH (Marshall Islands)'), ('mi', 'MI (USA Military)'), ('mk', 'MK (Macedonia)'), ('ml', 'ML (Mali)'), ('mm', 'MM (Myanmar)'), ('mn', 'MN (Mongolia)'), ('mo', 'MO (Macau)'), ('mp', 'MP (Northern Mariana Islands)'), ('mq', 'MQ (Martinique (French))'), ('mr', 'MR (Mauritania)'), ('ms', 'MS (Montserrat)'), ('mt', 'MT (Malta)'), ('mu', 'MU (Mauritius)'), ('mv', 'MV (Maldives)'), ('mw', 'MW (Malawi)'), ('mx', 'MX (Mexico)'), ('my', 'MY (Malaysia)'), ('mz', 'MZ (Mozambique)'), ('na', 'NA (Namibia)'), ('nc', 'NC (New Caledonia (French))'), ('ne', 'NE (Niger)'), ('ne', 'NE (Network)'), ('nf', 'NF (Norfolk Island)'), ('ng', 'NG (Nigeria)'), ('ni', 'NI (Nicaragua)'), ('nl', 'NL (Netherlands)'), ('no', 'NO (Norway)'), ('np', 'NP (Nepal)'), ('nr', 'NR (Nauru)'), ('nt', 'NT (Neutral Zone)'), ('nu', 'NU (Niue)'), ('nz', 'NZ (New Zealand)'), ('om', 'OM (Oman)'), ('or', 'OR (Non-Profit Making Organisations (sic))'), ('pa', 'PA (Panama)'), ('pe', 'PE (Peru)'), ('pf', 'PF (Polynesia (French))'), ('pg', 'PG (Papua New Guinea)'), ('ph', 'PH (Philippines)'), ('pk', 'PK (Pakistan)'), ('pl', 'PL (Poland)'), ('pm', 'PM (Saint Pierre and Miquelon)'), ('pn', 'PN (Pitcairn Island)'), ('pr', 'PR (Puerto Rico)'), ('pt', 'PT (Portugal)'), ('pw', 'PW (Palau)'), ('py', 'PY (Paraguay)'), ('qa', 'QA (Qatar)'), ('re', 'RE (Reunion (French))'), ('ro', 'RO (Romania)'), ('rs', 'RS (Serbia)'), ('ru', 'RU (Russian Federation)'), ('rw', 'RW (Rwanda)'), ('sa', 'SA (Saudi Arabia)'), ('sb', 'SB (Solomon Islands)'), ('sc', 'SC (Seychelles)'), ('sd', 'SD (Sudan)'), ('se', 'SE (Sweden)'), ('sg', 'SG (Singapore)'), ('sh', 'SH (Saint Helena)'), ('si', 'SI (Slovenia)'), ('sj', 'SJ (Svalbard and Jan Mayen Islands)'), ('sk', 'SK (Slovak Republic)'), ('sl', 'SL (Sierra Leone)'), ('sm', 'SM (San Marino)'), ('sn', 'SN (Senegal)'), ('so', 'SO (Somalia)'), ('sr', 'SR (Suriname)'), ('st', 'ST (Saint Tome (Sao Tome) and Principe)'), ('su', 'SU (USSR (former))'), ('sv', 'SV (El Salvador)'), ('sy', 'SY (Syria)'), ('sz', 'SZ (Swaziland)'), ('tc', 'TC (Turks and Caicos Islands)'), ('td', 'TD (Chad)'), ('tf', 'TF (French Southern Territories)'), ('tg', 'TG (Togo)'), ('th', 'TH (Thailand)'), ('tj', 'TJ (Tadjikistan)'), ('tk', 'TK (Tokelau)'), ('tm', 'TM (Turkmenistan)'), ('tn', 'TN (Tunisia)'), ('to', 'TO (Tonga)'), ('tp', 'TP (East Timor)'), ('tr', 'TR (Turkey)'), ('tt', 'TT (Trinidad and Tobago)'), ('tv', 'TV (Tuvalu)'), ('tw', 'TW (Taiwan)'), ('tz', 'TZ (Tanzania)'), ('ua', 'UA (Ukraine)'), ('ug', 'UG (Uganda)'), ('uk', 'UK (United Kingdom)'), ('um', 'UM (USA Minor Outlying Islands)'), ('us', 'US (United States)'), ('uy', 'UY (Uruguay)'), ('uz', 'UZ (Uzbekistan)'), ('va', 'VA (Holy See (Vatican City State))'), ('vc', 'VC (Saint Vincent & Grenadines)'), ('ve', 'VE (Venezuela)'), ('vg', 'VG (Virgin Islands (British))'), ('vi', 'VI (Virgin Islands (USA))'), ('vn', 'VN (Vietnam)'), ('vu', 'VU (Vanuatu)'), ('wf', 'WF (Wallis and Futuna Islands)'), ('ws', 'WS (Samoa)'), ('ye', 'YE (Yemen)'), ('yt', 'YT (Mayotte)'), ('yu', 'YU (Yugoslavia)'), ('za', 'ZA (South Africa)'), ('zm', 'ZM (Zambia)'), ('zr', 'ZR (Zaire)'), ('zw', 'ZW (Zimbabwe)')], db_index=True, max_length=3, verbose_name='IPEN')),
                ('ipen_transfer_restricted', models.CharField(choices=[('1', '1 (transfer restricted)'), ('0', '0 (transfer unrestriced)')], max_length=1, verbose_name='-')),
                ('ipen_accession_number', models.CharField(max_length=50, verbose_name='-')),
                ('source_date', models.DateField(blank=True, null=True, verbose_name='date of receipt')),
                ('came_in_as', models.CharField(blank=True, choices=[('PF', 'Plant'), ('SA', 'Seed'), ('ST', 'Scion'), ('UN', 'unknown')], db_index=True, max_length=2, verbose_name='received as')),
                ('found_country', models.CharField(choices=[('xx', 'xx UNKNOWN'), ('ad', 'AD (Andorra, Principality of)'), ('ae', 'AE (United Arab Emirates)'), ('af', 'AF (Afghanistan, Islamic State of)'), ('ag', 'AG (Antigua and Barbuda)'), ('ai', 'AI (Anguilla)'), ('al', 'AL (Albania)'), ('am', 'AM (Armenia)'), ('an', 'AN (Netherlands Antilles)'), ('ao', 'AO (Angola)'), ('aq', 'AQ (Antarctica)'), ('ar', 'AR (Argentina)'), ('as', 'AS (American Samoa)'), ('at', 'AT (Austria)'), ('au', 'AU (Australia)'), ('aw', 'AW (Aruba)'), ('az', 'AZ (Azerbaidjan)'), ('ba', 'BA (Bosnia-Herzegovina)'), ('bb', 'BB (Barbados)'), ('bd', 'BD (Bangladesh)'), ('be', 'BE (Belgium)'), ('bf', 'BF (Burkina Faso)'), ('bg', 'BG (Bulgaria)'), ('bh', 'BH (Bahrain)'), ('bi', 'BI (Burundi)'), ('bj', 'BJ (Benin)'), ('bm', 'BM (Bermuda)'), ('bn', 'BN (Brunei Darussalam)'), ('bo', 'BO (Bolivia)'), ('br', 'BR (Brazil)'), ('bs', 'BS (Bahamas)'), ('bt', 'BT (Bhutan)'), ('bv', 'BV (Bouvet Island)'), ('bw', 'BW (Botswana)'), ('by', 'BY (Belarus)'), ('bz', 'BZ (Belize)'), ('ca', 'CA (Canada)'), ('cc', 'CC (Cocos Islands)'), ('cf', 'CF (Central African Republic)'), ('cd', 'CD (Congo, The Democratic Republic of the)'), ('cg', 'CG (Congo)'), ('ch', 'CH (Switzerland)'), ('ci', "CI (Ivory Coast/Cote D'Ivoire)"), ('ck', 'CK (Cook Islands)'), ('cl', 'CL (Chile)'), ('cm', 'CM (Cameroon)'), ('cn', 'CN (China)'), ('co', 'CO (Colombia)'), ('cr', 'CR (Costa Rica)'), ('cs', 'CS (former Czechoslovakia)'), ('cu', 'CU (Cuba)'), ('cv', 'CV (Cape Verde)'), ('cx', 'CX (Christmas Island)'), ('cy', 'CY (Cyprus)'), ('cz', 'CZ (Czech Republic)'), ('de', 'DE (Germany)'), ('dj', 'DJ (Djibouti)'), ('dk', 'DK (Denmark)'), ('dm', 'DM (Dominica)'), ('do', 'DO (Dominican Republic)'), ('dz', 'DZ (Algeria)'), ('ec', 'EC (Ecuador)'), ('ee', 'EE (Estonia)'), ('eg', 'EG (Egypt)'), ('eh', 'EH (Western Sahara)'), ('er', 'ER (Eritrea)'), ('es', 'ES (Spain)'), ('et', 'ET (Ethiopia)'), ('fi', 'FI (Finland)'), ('fj', 'FJ (Fiji)'), ('fk', 'FK (Falkland Islands)'), ('fm', 'FM (Micronesia)'), ('fo', 'FO (Faroe Islands)'), ('fr', 'FR (France)'), ('fx', 'FX (France, European Territory)'), ('ga', 'GA (Gabon)'), ('gb', 'GB (Great Britain)'), ('gd', 'GD (Grenada)'), ('ge', 'GE (Georgia)'), ('gf', 'GF (French Guyana)'), ('gh', 'GH (Ghana)'), ('gi', 'GI (Gibraltar)'), ('gl', 'GL (Greenland)'), ('gm', 'GM (Gambia)'), ('gn', 'GN (Guinea)'), ('gp', 'GP (French Guadeloupe)'), ('gq', 'GP (Equatorial Guinea)'), ('gr', 'GR (Greece)'), ('gs', 'GS (S. Georgia & S. Sandwich Isls.)'), ('gt', 'GT (Guatemala)'), ('gu', 'GU (Guam (USA))'), ('gw', 'GW (Guinea Bissau)'), ('gy', 'GY (Guyana)'), ('hk', 'HK (Hong Kong)'), ('hm', 'HM (Heard and McDonald Islands)'), ('hn', 'HN (Honduras)'), ('hr', 'HR (Croatia)'), ('ht', 'HT (Haiti)'), ('hu', 'HU (Hungary)'), ('id', 'ID (Indonesia)'), ('ie', 'IE (Ireland)'), ('il', 'IL (Israel)'), ('in', 'IN (India)'), ('io', 'IO (British Indian Ocean Territory)'), ('iq', 'IQ (Iraq)'), ('ir', 'IR (Iran)'), ('is', 'IS (Iceland)'), ('it', 'IT (Italy)'), ('jm', 'JM (Jamaica)'), ('jo', 'JO (Jordan)'), ('jp', 'JP (Japan)'), ('ke', 'KE (Kenya)'), ('kg', 'KG (Kyrgyz Republic, Kyrgyzstan)'), ('kh', 'KH (Cambodia, Kingdom of)'), ('ki', 'KI (Kiribati)'), ('km', 'KM (Comoros)'), ('kn', 'KN (Saint Kitts & Nevis Anguilla)'), ('kp', 'KP (North Korea)'), ('kr', 'KR (South Korea)'), ('kw', 'KW (Kuwait)'), ('ky', 'KY (Cayman Islands)'), ('kz', 'KZ (Kazakhstan)'), ('la', 'LA (Laos)'), ('lb', 'LB (Lebanon)'), ('lc', 'LC (Saint Lucia)'), ('li', 'LI (Liechtenstein)'), ('lk', 'LK (Sri Lanka)'), ('lr', 'LR (Liberia)'), ('ls', 'LS (Lesotho)'), ('lt', 'LT (Lithuania)'), ('lu', 'LU (Luxembourg)'), ('lv', 'LV (Latvia)'), ('ly', 'LY (Libya)'), ('ma', 'MA (Morocco)'), ('mc', 'MC (Monaco)'), ('md', 'MD (Moldavia)'), ('me', 'ME (Montenegro)'), ('mg', 'MG (Madagascar)'), ('mh', 'MH (Marshall Islands)'), ('mi', 'MI (USA Military)'), ('mk', 'MK (Macedonia)'), ('ml', 'ML (Mali)'), ('mm', 'MM (Myanmar)'), ('mn', 'MN (Mongolia)'), ('mo', 'MO (Macau)'), ('mp', 'MP (Northern Mariana Islands)'), ('mq', 'MQ (Martinique (French))'), ('mr', 'MR (Mauritania)'), ('ms', 'MS (Montserrat)'), ('mt', 'MT (Malta)'), ('mu', 'MU (Mauritius)'), ('mv', 'MV (Maldives)'), ('mw', 'MW (Malawi)'), ('mx', 'MX (Mexico)'), ('my', 'MY (Malaysia)'), ('mz', 'MZ (Mozambique)'), ('na', 'NA (Namibia)'), ('nc', 'NC (New Caledonia (French))'), ('ne', 'NE (Niger)'), ('ne', 'NE (Network)'), ('nf', 'NF (Norfolk Island)'), ('ng', 'NG (Nigeria)'), ('ni', 'NI (Nicaragua)'), ('nl', 'NL (Netherlands)'), ('no', 'NO (Norway)'), ('np', 'NP (Nepal)'), ('nr', 'NR (Nauru)'), ('nt', 'NT (Neutral Zone)'), ('nu', 'NU (Niue)'), ('nz', 'NZ (New Zealand)'), ('om', 'OM (Oman)'), ('or', 'OR (Non-Profit Making Organisations (sic))'), ('pa', 'PA (Panama)'), ('pe', 'PE (Peru)'), ('pf', 'PF (Polynesia (French))'), ('pg', 'PG (Papua New Guinea)'), ('ph', 'PH (Philippines)'), ('pk', 'PK (Pakistan)'), ('pl', 'PL (Poland)'), ('pm', 'PM (Saint Pierre and Miquelon)'), ('pn', 'PN (Pitcairn Island)'), ('pr', 'PR (Puerto Rico)'), ('pt', 'PT (Portugal)'), ('pw', 'PW (Palau)'), ('py', 'PY (Paraguay)'), ('qa', 'QA (Qatar)'), ('re', 'RE (Reunion (French))'), ('ro', 'RO (Romania)'), ('rs', 'RS (Serbia)'), ('ru', 'RU (Russian Federation)'), ('rw', 'RW (Rwanda)'), ('sa', 'SA (Saudi Arabia)'), ('sb', 'SB (Solomon Islands)'), ('sc', 'SC (Seychelles)'), ('sd', 'SD (Sudan)'), ('se', 'SE (Sweden)'), ('sg', 'SG (Singapore)'), ('sh', 'SH (Saint Helena)'), ('si', 'SI (Slovenia)'), ('sj', 'SJ (Svalbard and Jan Mayen Islands)'), ('sk', 'SK (Slovak Republic)'), ('sl', 'SL (Sierra Leone)'), ('sm', 'SM (San Marino)'), ('sn', 'SN (Senegal)'), ('so', 'SO (Somalia)'), ('sr', 'SR (Suriname)'), ('st', 'ST (Saint Tome (Sao Tome) and Principe)'), ('su', 'SU (USSR (former))'), ('sv', 'SV (El Salvador)'), ('sy', 'SY (Syria)'), ('sz', 'SZ (Swaziland)'), ('tc', 'TC (Turks and Caicos Islands)'), ('td', 'TD (Chad)'), ('tf', 'TF (French Southern Territories)'), ('tg', 'TG (Togo)'), ('th', 'TH (Thailand)'), ('tj', 'TJ (Tadjikistan)'), ('tk', 'TK (Tokelau)'), ('tm', 'TM (Turkmenistan)'), ('tn', 'TN (Tunisia)'), ('to', 'TO (Tonga)'), ('tp', 'TP (East Timor)'), ('tr', 'TR (Turkey)'), ('tt', 'TT (Trinidad and Tobago)'), ('tv', 'TV (Tuvalu)'), ('tw', 'TW (Taiwan)'), ('tz', 'TZ (Tanzania)'), ('ua', 'UA (Ukraine)'), ('ug', 'UG (Uganda)'), ('uk', 'UK (United Kingdom)'), ('um', 'UM (USA Minor Outlying Islands)'), ('us', 'US (United States)'), ('uy', 'UY (Uruguay)'), ('uz', 'UZ (Uzbekistan)'), ('va', 'VA (Holy See (Vatican City State))'), ('vc', 'VC (Saint Vincent & Grenadines)'), ('ve', 'VE (Venezuela)'), ('vg', 'VG (Virgin Islands (British))'), ('vi', 'VI (Virgin Islands (USA))'), ('vn', 'VN (Vietnam)'), ('vu', 'VU (Vanuatu)'), ('wf', 'WF (Wallis and Futuna Islands)'), ('ws', 'WS (Samoa)'), ('ye', 'YE (Yemen)'), ('yt', 'YT (Mayotte)'), ('yu', 'YU (Yugoslavia)'), ('za', 'ZA (South Africa)'), ('zm', 'ZM (Zambia)'), ('zr', 'ZR (Zaire)'), ('zw', 'ZW (Zimbabwe)')], db_index=True, max_length=3, verbose_name='collecting country')),
                ('found_text', models.TextField(blank=True, max_length=10000, verbose_name='collecting place description')),
                ('collector_name', models.CharField(blank=True, max_length=100, verbose_name="collector's name")),
                ('collector_number', models.CharField(blank=True, max_length=100, verbose_name='collection number')),
                ('collector_date', models.DateField(blank=True, null=True, verbose_name='collection date')),
                ('gender', models.CharField(blank=True, choices=[('M', 'male'), ('W', 'female'), ('Z', 'hermaphrodite'), ('X', 'unknown')], max_length=1, verbose_name='gender')),
                ('comment', models.TextField(blank=True, max_length=10000, verbose_name='comment')),
                ('ipen_generated', models.CharField(editable=False, max_length=200, null=True, verbose_name='IPEN')),
                ('seed_available', models.BooleanField(verbose_name='seed available')),
                ('order_number', models.IntegerField(default=individuals.numbers.get_new_order_number, unique=True, verbose_name='order number')),
                ('seed_collector_date', models.DateField(blank=True, null=True, verbose_name="seed's collection date")),
                ('seed_in_stock', models.BooleanField(verbose_name='seed in stock')),
                ('alive_outplantings_generated', picklefield.fields.PickledObjectField(blank=True, default=None, editable=False, null=True, verbose_name='alive_outplantings_generated')),
                ('outplantings_generated', picklefield.fields.PickledObjectField(blank=True, default=None, editable=False, null=True, verbose_name='outplantings_generated')),
                ('departments_generated', models.CharField(blank=True, max_length=1000, verbose_name='departments')),
                ('territories_generated', models.CharField(blank=True, max_length=1000, verbose_name='territories')),
                ('sowing_number', models.CharField(blank=True, max_length=100, verbose_name='sowing number')),
                ('is_alive_generated', models.BooleanField(default=False, editable=False, verbose_name='is alive')),
                ('ipen_garden_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='botman.botanicgarden', verbose_name='-')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_key', to='botman.botanicgarden', verbose_name='source')),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='species.species', verbose_name='genus & Species')),
            ],
            options={
                'verbose_name': 'individual',
                'verbose_name_plural': 'individuals',
                'unique_together': {('ipen_country', 'ipen_transfer_restricted', 'ipen_accession_number', 'ipen_garden_code')},
            },
            bases=(models.Model, config_tables.admin.Configurable),
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_outplantings', models.IntegerField(default=0, editable=False, verbose_name='# outplantings')),
                ('num_individuals', models.IntegerField(default=0, editable=False, verbose_name='# individuals')),
                ('num_species', models.IntegerField(default=0, editable=False, verbose_name='# species')),
                ('num_genera', models.IntegerField(default=0, editable=False, verbose_name='# genera')),
                ('num_outplantings_alive', models.IntegerField(default=0, editable=False, verbose_name='# outplantings alive')),
                ('num_individuals_alive', models.IntegerField(default=0, editable=False, verbose_name='# individuals alive')),
                ('num_species_alive', models.IntegerField(default=0, editable=False, verbose_name='# species alive')),
                ('num_genera_alive', models.IntegerField(default=0, editable=False, verbose_name='# genera alive')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='territory code')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='territory name')),
                ('name_generated', models.CharField(default='', editable=False, max_length=70, verbose_name='display name')),
            ],
            options={
                'verbose_name': 'territory',
                'verbose_name_plural': 'territories',
                'ordering': ['code'],
            },
            bases=(models.Model, config_tables.admin.Configurable),
        ),
        migrations.CreateModel(
            name='Outplanting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seeded_date', models.DateField(blank=True, null=True, verbose_name='sowing date')),
                ('date', models.DateField(blank=True, null=True, verbose_name='bed out date')),
                ('plant_died', models.DateField(blank=True, null=True, verbose_name='plant died on')),
                ('department', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='individuals.department', verbose_name='department')),
                ('individual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='individuals.individual', verbose_name='individual')),
            ],
            options={
                'verbose_name': 'Outplanting',
                'verbose_name_plural': 'Outplantings',
            },
            bases=(models.Model, config_tables.admin.Configurable),
        ),
        migrations.AddField(
            model_name='department',
            name='territory',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='individuals.territory', verbose_name='territory'),
        ),
        migrations.CreateModel(
            name='Seed',
            fields=[
            ],
            options={
                'verbose_name': 'seed',
                'verbose_name_plural': 'seeds',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('individuals.individual',),
        ),
    ]
